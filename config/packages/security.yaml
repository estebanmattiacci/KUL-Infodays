security:
    ***REMOVED*** https://symfony.com/doc/current/security.html***REMOVED***registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    ***REMOVED*** https://symfony.com/doc/current/security.html***REMOVED***loading-the-user-the-user-provider
    providers:
        ***REMOVED*** used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                ***REMOVED*** where to redirect after logout
                ***REMOVED*** target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

            ***REMOVED*** activate different ways to authenticate
            ***REMOVED*** https://symfony.com/doc/current/security.html***REMOVED***the-firewall

            ***REMOVED*** https://symfony.com/doc/current/security/impersonating_user.html
            ***REMOVED*** switch_user: true

    ***REMOVED*** Easy way to control access for large sections of your site
    ***REMOVED*** Note: Only the *first* access control that matches will be used
    access_control:
        ***REMOVED*** - { path: ^/admin, roles: ROLE_ADMIN }
        ***REMOVED*** - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            ***REMOVED*** By default, password hashers are resource intensive and take time. This is
            ***REMOVED*** important to generate secure password hashes. In tests however, secure hashes
            ***REMOVED*** are not important, waste resources and increase test times. The following
            ***REMOVED*** reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 ***REMOVED*** Lowest possible value for bcrypt
                time_cost: 3 ***REMOVED*** Lowest possible value for argon
                memory_cost: 10 ***REMOVED*** Lowest possible value for argon
